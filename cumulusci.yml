minimum_cumulusci_version: '3.16.0'
project:
    name: Selector
    package:
        name: Selector
        api_version: '49.0'
    git:
        default_branch: 'develop'
    source_format: sfdx
    dependencies:
        - github: https://github.com/jarenyach/LEX-to-VF
          unmanaged: True
orgs:
    scratch:
          selector:
              config_file: config/project-scratch-def.json
              days: 1
tasks:
    robot:
        options:
            suites: robot/LightningLens/tests
            options:
                outputdir: robot/LightningLens/results

    robot_testdoc:
        options:
            path: robot/LightningLens/tests
            output: robot/LightningLens/doc/LightningLens_tests.html

    run_tests:
        options:
            required_org_code_coverage_percent: 75
            managed: True
            test_name_match: "%TEST%"
            retry_failures:
                - "unable to obtain exclusive access to this record"
                - "UNABLE_TO_LOCK_ROW"
                - "connection was cancelled here"
            retry_always: True

    sfpm_install:
        description: Run SFPM install
        class_path: cumulusci.tasks.command.Command
        options:
            command: sfdx fonteva:sfpm:install

    ns_swap:
        description: Does a namespace swap with the org namespace for deploy
        class_path: build.tasks.swapnsp.SwapNsp
        options:
           src_path: "community"

    ns_swap_layouts:
        description: Does a namespace swap with the org namespace for layouts
        class_path: build.tasks.swapnsp.SwapNsp
        options:
           src_path: "unpackaged/layouts/src"

    ns_swap_community:
        description: Does a namespace swap with the org namespace for community setup
        class_path: build.tasks.swapnsp.SwapNsp
        options:
           src_path: "unpackaged/community/LTEDev"

    ns_swap_for_data:
        description: Does a namespace swap for the data load
        class_path: build.tasks.swapnspdata.SwapNsp
        options:
           src_path: "datasets"

    source_deploy:
       description: Run source deploy
       class_path: cumulusci.tasks.sfdx.SFDXOrgTask
       options:
           command: force:source:deploy -p ./tmp

    deploy:
       description: Run source deploy
       class_path: cumulusci.tasks.sfdx.SFDXOrgTask
       options:
           command: force:source:deploy -p community

    test_deploy:
       description: Run source deploy and test
       class_path: cumulusci.tasks.sfdx.SFDXOrgTask
       options:
           command: force:source:deploy -c -p community --testlevel=RunLocalTests -w 120


    deploy_layouts:
        description: Apply Layouts
        class_path: cumulusci.tasks.salesforce.Deploy
        options:
            path: ./tmp

    deploy_layouts_scratch:
        description: Apply Layouts
        class_path: cumulusci.tasks.salesforce.Deploy
        options:
            path: "unpackaged/layouts/src"

    fls_run:
        description: Run FLS for Admin, Fonteva Customer Community Login User and Member Portal profiles
        class_path: build.tasks.fls.UpdateProfile
        options:
            package_xml: config/admin_profile.xml

    create_community:
        description: Create Member Portal Community
        options:
            name: Member Portal
            template: Build Your Own
            skip_existing: true

    publish_community:
        description: Publish Community
        options:
            name: Member Portal

    deploy_community:
        description: Deploy Community
        class_path: cumulusci.tasks.sfdx.SFDXOrgTask
        options:
            command: force:source:deploy -p tmp/src

    deploy_community_scratch:
        description: Deploy Community for scratch org
        class_path: cumulusci.tasks.sfdx.SFDXOrgTask
        options:
            command: force:source:deploy -p unpackaged/community/LTEScratch/src

    import_community:
       description: Apply Community
       class_path: cumulusci.tasks.sfdx.SFDXOrgTask
       options:
           command: force:data:tree:import -f tmp/lte-sites-tree-export.json

    disable_triggers:
        description: Disable the triggers for the dataload
        class_path: cumulusci.tasks.apex.anon.AnonymousApexTask
        options:
            path: datasets/update_trigger.cls
            param1: 'false'

    enable_triggers:
        description: Enable the triggers after the dataload
        class_path: cumulusci.tasks.apex.anon.AnonymousApexTask
        options:
            path: datasets/update_trigger.cls
            param1: 'true'

    load_dataset:
        description: Load Dataset
        options:
            sql_path: tmp/datasets/sample.sql
            mapping: tmp/datasets/mapping.yml

    cleanup:
        description: Delete the tmp directory
        class_path: build.tasks.cleanup.cleanUp

flows:
    build_dev_org:
        description: Build a dev org
        steps:
            1:
                task: update_dependencies
            2:
                task: ns_swap
            3:
                task: sfpm_install
            4:
                task: source_deploy
            5:
                task: fls_run
            6:
                task: ns_swap_community
            7:
                task: create_community
            8:
                task: deploy_community
            9:
                task: import_community
            10:
                task: publish_community
            11:
                task: ns_swap_layouts
            12:
                task: deploy_layouts
            13:
                task: cleanup

    build_scratch_org:
        description: Build a LTE scratch org
        steps:
            1:
                task: update_dependencies
            2:
                task: sfpm_install
            3:
                task: deploy
            4:
                task: update_admin_profile
            5:
                task: deploy_layouts_scratch
            6:
                task: fls_run
            7:
                task: deploy_community_scratch
            8:
                task: publish_community
            9:
                task: cleanup

    load_data:
        description: Load data in a dev org.
        steps:
            1:
                task: ns_swap_for_data
            2:
                task: disable_triggers
            3:
                task: load_dataset
            4:
                task: enable_triggers
            5:
                task: cleanup

    apply_layouts:
        description: Apply Layouts in a dev org.
        steps:
            1:
                task: ns_swap_layouts
            2:
                task: deploy_layouts
            3:
                task: cleanup

    apply_community:
        description: Apply Community in a dev org.
        steps:
            1:
                task: ns_swap_community
            2:
                task: create_community
            3:
                task: deploy_community
            4:
                task: import_community
            5:
                task: publish_community
            6:
                task: cleanup

    build_dev_org_with_data:
        description: Build a dev org with data
        steps:
            1:
                task: update_dependencies
            2:
                task: ns_swap
            3:
                task: sfpm_install
            4:
                task: source_deploy
            5:
                task: update_admin_profile
            5:
                task: ns_swap_community
            6:
                task: create_community
            7:
                task: deploy_community
            8:
                task: publish_community
            9:
                task: ns_swap_layouts
            10:
                task: deploy_layouts
            11:
                task: fls_run
            12:
                task: ns_swap_for_data
            13:
                task: disable_triggers
            14:
                task: load_dataset
            15:
                task: enable_triggers
            16:
                task: cleanup

    build_scratch_org_with_data:
        description: Build a LTE scratch org with data
        steps:
            1:
                task: update_dependencies
            2:
                task: sfpm_install
            3:
                task: deploy
            4:
                task: update_admin_profile
            5:
                task: deploy_community_scratch
            6:
                task: publish_community
            7:
                task: deploy_layouts_scratch
            8:
                task: fls_run
            9:
                task: disable_triggers
            10:
                task: load_dataset
            11:
                task: enable_triggers
            12:
                task: cleanup

    develop_run_pr:
        description: Build a Scratch org and run PR
        steps:
            1:
                task: update_dependencies
            2:
                task: sfpm_install
            3:
                task: dx_push
            4:
                task: update_admin_profile
            5:
                task: test_deploy

    jaren:
        description: Build a LTE scratch org with data
        steps:
            1:
                task: update_dependencies
